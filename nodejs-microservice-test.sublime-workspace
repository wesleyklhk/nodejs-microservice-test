{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rnn",
				"rnn_con"
			],
			[
				"set",
				"set_trace"
			],
			[
				"report",
				"reports"
			],
			[
				"question",
				"question_number\tstatement"
			],
			[
				"real",
				"real_scores\tstatement"
			],
			[
				"quest",
				"question_numbers\tstatement"
			],
			[
				"target",
				"target_student_grades\tstatement"
			],
			[
				"i",
				"items\tfunction"
			],
			[
				"irre",
				"irrelevant_count\tstatement"
			],
			[
				"irr",
				"irrelevant_count\tstatement"
			],
			[
				"actua",
				"actual_y_excel\tstatement"
			],
			[
				"questio",
				"question\tstatement"
			],
			[
				"location",
				"location_result_df\tparam"
			],
			[
				"actau",
				"actual_y_excel\tstatement"
			],
			[
				"locat",
				"location_result_dir\tstatement"
			],
			[
				"overa",
				"teacher_overall_scores"
			],
			[
				"sto",
				"store_reports_in_dir"
			],
			[
				"all_",
				"all_seat_no"
			],
			[
				"row",
				"row_func"
			],
			[
				"stude",
				"student_questions_df"
			],
			[
				"student",
				"student_rw_dict"
			],
			[
				"consequ",
				"consequence"
			],
			[
				"set_",
				"set_index"
			],
			[
				"mappin",
				"mapping2"
			],
			[
				"targ",
				"target_questions_dict"
			],
			[
				"seat",
				"seat_no"
			],
			[
				"traiing",
				"training_proportion"
			],
			[
				"overall_",
				"overall_samples_y"
			],
			[
				"Dec",
				"DecisionTreeMultiOutput"
			],
			[
				"rna",
				"range"
			],
			[
				"rele",
				"relevance"
			],
			[
				"simi",
				"similar"
			],
			[
				"sim",
				"similar"
			],
			[
				"all",
				"all_sents"
			],
			[
				"fyp",
				"fyp_codes"
			],
			[
				"lr",
				"lr_input_mask"
			],
			[
				"transfo",
				"DuplicationTransformer"
			],
			[
				"for",
				"format\tfunction"
			],
			[
				"not",
				"not_found\tstatement"
			],
			[
				"grad",
				"grades_df\tstatement"
			],
			[
				"exce",
				"except"
			],
			[
				"yin_d",
				"yin_found_df\tstatement"
			],
			[
				"tar",
				"target_question\tparam"
			],
			[
				"not_foun",
				"not_found_df\tstatement"
			],
			[
				"not_found",
				"not_found_df\tstatement"
			],
			[
				"num_",
				"num_classes"
			],
			[
				"bat",
				"batch_y"
			],
			[
				"epoc",
				"epochs"
			],
			[
				"output",
				"output_layer"
			],
			[
				"lay",
				"layers"
			],
			[
				"layer",
				"layer_dict"
			],
			[
				"num_hi",
				"num_hidden_nodes"
			],
			[
				"num",
				"num_hidden_nodes"
			],
			[
				"input",
				"input_to_hidden_layer"
			],
			[
				"CURR",
				"CURRENT_DIR"
			],
			[
				"max",
				"max_prob"
			],
			[
				"lr_t",
				"lr_t_con\tstatement"
			],
			[
				"rwc",
				"rwc_input_df\tstatement"
			],
			[
				"de",
				"deduplicate_for_stats_utils\tfunction"
			],
			[
				"ded",
				"deduplicate_for_rwc\tfunction"
			],
			[
				"raw",
				"raw_x_cols"
			],
			[
				"res",
				"result_df"
			],
			[
				"task4",
				"task4_preprocessing_utils\tmodule"
			],
			[
				"comm",
				"common_ds\tmodule"
			],
			[
				"lr_t_",
				"lr_t_prob\tstatement"
			],
			[
				"cla",
				"classes_\tstatement"
			],
			[
				"class",
				"classifier\tstatement"
			],
			[
				"stats",
				"stats_input_df\tstatement"
			],
			[
				"result",
				"result_df\tstatement"
			],
			[
				"max_pr",
				"max_prob\tstatement"
			],
			[
				"sort",
				"sorted_outputs\tstatement"
			],
			[
				"asc",
				"ascending"
			],
			[
				"get",
				"get_all_possible_output_labels\tfunction"
			],
			[
				"grades",
				"grades_df"
			],
			[
				"excel",
				"excel_name\tparam"
			],
			[
				"studet",
				"student_report\tstatement"
			],
			[
				"found",
				"found_labels\tstatement"
			],
			[
				"tmp",
				"tmp_dict\tstatement"
			],
			[
				"gen",
				"generate_right_wrong_notfound_report\tfunction"
			],
			[
				"senten",
				"sentences_df\tstatement"
			],
			[
				"sente",
				"sentences_with_grade_df\tstatement"
			],
			[
				"sentenc",
				"sentences_with_grade_df"
			],
			[
				"sentences",
				"sentences_df"
			],
			[
				"join",
				"join_with_grades\tfunction"
			],
			[
				"sent",
				"sentences_df\tstatement"
			],
			[
				"pred",
				"prediction_labels\tstatement"
			],
			[
				"cm",
				"cm_include_indecisive\tparam"
			],
			[
				"method",
				"method_dir\tstatement"
			],
			[
				"see",
				"seed_dir\tstatement"
			],
			[
				"reports",
				"reports_rank\tstatement"
			],
			[
				"store",
				"store_reports_in_dir\tfunction"
			],
			[
				"list",
				"listdir\tfunction"
			],
			[
				"onehot",
				"onehot_to_int\tfunction"
			],
			[
				"rnn_in",
				"rnn_t_inputs\tstatement"
			],
			[
				"expor",
				"export_graphviz\tfunction"
			],
			[
				"label",
				"label2int\tfunction"
			],
			[
				"target_data",
				"target_data_pos"
			],
			[
				"studetn",
				"student_question_labels"
			],
			[
				"prepr",
				"preprocess_utils"
			],
			[
				"rnn_t",
				"rnn_t_outputs\tstatement"
			],
			[
				"train",
				"training_proportion\tparam"
			],
			[
				"dest",
				"destination_parent_dir\tparam"
			],
			[
				"filen",
				"filename\tstatement"
			],
			[
				"lr_",
				"lr_t_inputs\tstatement"
			],
			[
				"cl",
				"classifier\tstatement"
			],
			[
				"batc",
				"batch_x"
			],
			[
				"batch",
				"batch_size\tstatement"
			],
			[
				"next",
				"next_head\tstatement"
			],
			[
				"max_pro",
				"max_prob_classes"
			],
			[
				"fr",
				"from_proba_to_output"
			],
			[
				"dep",
				"dep_"
			],
			[
				"te",
				"text_features_dict"
			],
			[
				"probs",
				"probs_df"
			],
			[
				"pro",
				"probs_df"
			],
			[
				"neg",
				"neg_sample_size"
			],
			[
				"features",
				"features_set"
			],
			[
				"info_",
				"info_df"
			],
			[
				"studen",
				"student_found_df"
			],
			[
				"man_le",
				"man_level_expected_y_matrix"
			],
			[
				"man",
				"man_level_expected_y_matrix"
			],
			[
				"expecte",
				"expected_y"
			],
			[
				"expect",
				"expected_y"
			],
			[
				"yin",
				"yin_df"
			],
			[
				"feat_dict",
				"feat_dict_cols"
			],
			[
				"yin_df",
				"yin_df_to_sentence_level"
			],
			[
				"training",
				"training_samples_x"
			],
			[
				"training_sam",
				"training_samples_y"
			],
			[
				"training_samples",
				"training_samples_x"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# next.js build output\n.next\n\n\n",
			"file": ".gitignore",
			"file_size": 914,
			"file_write_time": 131790722150000800,
			"settings":
			{
				"buffer_size": 916,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 26,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 244.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"Anaconda: Disable linting on this file"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Anaconda: Disable linting on this file"
			],
			[
				"disa",
				"Anaconda: Disable linting on this file"
			],
			[
				"ena",
				"Anaconda: Enable linting on this file"
			],
			[
				"sublimerge",
				"Sublimerge: Compare to Other Branch..."
			],
			[
				"disable",
				"Anaconda: Disable linting on this file"
			],
			[
				"en",
				"Anaconda: Enable linting on this file"
			],
			[
				"disabl",
				"Anaconda: Disable linting on this file"
			],
			[
				"enable",
				"Anaconda: Enable linting on this file"
			],
			[
				"enab",
				"Anaconda: Enable linting on this file"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Package Control: List Pac",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"python",
			"sublime.cache_path()",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/wes/Documents/nodejs-microservice-test"
	],
	"file_history":
	[
		"/home/wes/Documents/nodejs-microservice-test/customer-service/package.json",
		"/home/wes/Documents/nodejs-microservice-test/customer-service/package-lock.json",
		"/home/wes/Documents/fyp/training/fyp_codes/learning_models/rnn.py",
		"/home/wes/Documents/fyp/training/fyp_codes/learning_models/consensus.py",
		"/home/wes/Documents/fyp/training/fyp_codes/learning_models/decision_tree.py",
		"/home/wes/Documents/fyp/training/fyp_codes/common_ds/task4_preprocessing_utils.py",
		"/home/wes/Documents/fyp/training/task10_location.py",
		"/home/wes/Documents/fyp/training/task4_main_v2.py",
		"/home/wes/Documents/fyp/training/task4_demo.py",
		"/home/wes/Documents/fyp/training/fyp_codes/task10_training/grammar_grading/grammar_features_utils.py",
		"/home/wes/Documents/fyp/training/fyp_codes/common_ds/stats_utils.py",
		"/home/wes/Documents/fyp/training/task10_main_v2.py",
		"/home/wes/Documents/fyp/training/fyp_codes/task10_training/organization_grading/org_features_utils.py",
		"/home/wes/Documents/fyp/training/org_cohesion_input_variables",
		"/media/wes/PHILIPS UFD/grammar_ids.txt",
		"/home/wes/Documents/fyp/training/fyp_codes/learning_models/nn.py",
		"/home/wes/Documents/fyp/training/fyp_codes/config.json",
		"/home/wes/Documents/fyp/training/fyp_codes/common_ds/sklearn_tree_utils.py",
		"/home/wes/Documents/fyp/training/fyp_codes/learning_models/task10_grammar_logistic_regression.py",
		"/home/wes/Documents/fyp/training/fyp_codes/task10_training/organization_grading/model_lr.py",
		"/home/wes/Documents/fyp/training/fyp_codes/__init__.py",
		"/home/wes/Documents/fyp/training/code/docx_example/read_docx.py",
		"/home/wes/Documents/fyp/training/code/learning_models/nn.py",
		"/home/wes/Documents/fyp/training/code/learning_models/rnn.py",
		"/home/wes/Documents/fyp/training/code/task10_training/logistic_regression.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2a/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2b/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3a/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3b/models/model3_v2.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_9_and_10/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_9_and_10/location_classifier.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_9_and_10/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_7_and_8/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_7_and_8/location_classifier.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_7_and_8/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_5_and_6/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_5_and_6/location_classifier.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_5_and_6/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_4/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_4/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_3/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_3/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_1_and_2/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_1_and_2/location_classifier.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_1_and_2/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_13/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_13/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_12/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_12/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_11/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_11/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_3b/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_3b/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_3a/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_3a/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_2b/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_2b/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_2a/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_2a/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1c/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1c/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1b/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1b/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1a/rule.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task10_1a/concept.py",
		"/home/wes/Documents/fyp/training/code/common_ds/task4_preprocessing_utils.py",
		"/home/wes/Documents/fyp/training/task10_main.py",
		"/home/wes/Documents/fyp/training/task4_main.py",
		"/home/wes/Documents/fyp/training/code/learning_models/consensus.py",
		"/home/wes/Documents/fyp/training/code/learning_models/decision_tree.py",
		"/home/wes/Documents/fyp/training/code/task10_training/find_features/stanford_dependencies.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/pipeline2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2a/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2a/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2b/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_2b/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3a/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3a/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3b/pipeline3.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_3b/sample_pipeline.py",
		"/home/wes/Documents/fyp/training/code/learning_models/task10_grammar_logistic_regression.py",
		"/home/wes/Documents/fyp/training/code/task10_training/content_grading/preprocess_utils.py",
		"/home/wes/Documents/fyp/training/code/task10_training/grammar_grading/grammar_features_utils.py",
		"/home/wes/Documents/fyp/training/code/task10_training/organization_grading/org_features_utils.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model0.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model0_5.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model0_6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model0_7.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model1.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model4_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model6_concepts.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model6_deps.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model6_only_deps.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/model6_only_second_order.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1a/models/preprocessing_utils.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model0.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model0_5.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model0_6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model0_7.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model1.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model4_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model6_concepts.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model6_deps.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model6_only_deps.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/model6_only_second_order.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1b/models/preprocessing_utils.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model0.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model0_5.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model0_6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model0_7.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model1.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model4_v2.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model6.py",
		"/home/wes/Documents/fyp/training/code/task10_training/task10_1c/models/model6_concepts.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 916,
						"regions":
						{
						},
						"selection":
						[
							[
								916,
								916
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 421.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 88.0
	},
	"pinned_build_system": "",
	"project": "nodejs-microservice-test.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"task10",
				"task10_location.py"
			],
			[
				"conse",
				"fyp_codes/learning_models/consensus.py"
			],
			[
				"rnn",
				"fyp_codes/learning_models/rnn.py"
			],
			[
				"task4_p",
				"fyp_codes/common_ds/task4_preprocessing_utils.py"
			],
			[
				"decis",
				"fyp_codes/learning_models/decision_tree.py"
			],
			[
				"grammar",
				"fyp_codes/task10_training/grammar_grading/grammar_features_utils.py"
			],
			[
				"org_",
				"fyp_codes/task10_training/organization_grading/org_features_utils.py"
			],
			[
				"stat",
				"fyp_codes/common_ds/stats_utils.py"
			],
			[
				"consens",
				"fyp_codes/learning_models/consensus.py"
			],
			[
				"decision",
				"fyp_codes/learning_models/decision_tree.py"
			],
			[
				"task10_lo",
				"task10_location.py"
			],
			[
				"task4",
				"fyp_codes/common_ds/task4_preprocessing_utils.py"
			],
			[
				"sklear",
				"fyp_codes/common_ds/sklearn_tree_utils.py"
			],
			[
				"task",
				"task4_main_v2.py"
			],
			[
				"config",
				"fyp_codes/config.json"
			],
			[
				"org_fea",
				"fyp_codes/task10_training/organization_grading/org_features_utils.py"
			],
			[
				"nn.py",
				"fyp_codes/learning_models/nn.py"
			],
			[
				"consen",
				"code/learning_models/consensus.py"
			],
			[
				"task4_main",
				"task4_main_v2.py"
			],
			[
				"task10_",
				"task10_main_v2.py"
			],
			[
				"logist",
				"code/task10_training/logistic_regression.py"
			],
			[
				"grammar_grad",
				"code/task10_training/grammar_grading/grammar_features_utils.py"
			],
			[
				"status",
				"code/common_ds/stats_utils.py"
			],
			[
				"cons",
				"code/learning_models/consensus.py"
			],
			[
				"decisio",
				"code/learning_models/decision_tree.py"
			],
			[
				"task4_pre",
				"code/common_ds/task4_preprocessing_utils.py"
			],
			[
				"prepro",
				"code/task10_training/content_grading/preprocess_utils.py"
			],
			[
				"task10_m",
				"task10_main_v2.py"
			],
			[
				"task4_",
				"task4_main_v2.py"
			],
			[
				"logis",
				"code/task10_training/logistic_regression.py"
			],
			[
				"task4_m",
				"task4_main_v2.py"
			],
			[
				"task4_prepro",
				"code\\common_ds\\task4_preprocessing_utils.py"
			],
			[
				"rule",
				"code\\common_ds\\task10_1a\\rule.py"
			],
			[
				"logistic",
				"code\\task10_training\\logistic_regression.py"
			],
			[
				"grammar_fea",
				"code\\task10_training\\grammar_grading\\grammar_features_utils.py"
			],
			[
				"model_dt",
				"code\\task10_training\\grammar_grading\\model_dt.py"
			],
			[
				"task4_pro",
				"code\\common_ds\\task4_preprocessing_utils.py"
			],
			[
				"logisti",
				"code\\task10_training\\logistic_regression.py"
			],
			[
				"stats",
				"code/common_ds/stats_utils.py"
			],
			[
				"sklea",
				"code/common_ds/sklearn_tree_utils.py"
			],
			[
				"model_6",
				"code/task10_training/task10_1a/models/model6_concepts.py"
			],
			[
				"model_6_de",
				"code/task10_training/task10_1a/models/model6_only_deps.dot"
			],
			[
				"rnn.",
				"code/learning_models/rnn.py"
			],
			[
				"preprocessing_utils",
				"code/task4_training/task4_4/models/preprocessing_utils.py"
			],
			[
				"preprocessing_utils.py",
				"code/task4_training/task4_12/models/preprocessing_utils.py"
			],
			[
				"preprocessing",
				"code/task10_training/task10_3b/models/preprocessing_utils.py"
			],
			[
				"preprocessingutils",
				"code/task10_training/task10_1a/models/preprocessing_utils.py"
			],
			[
				"preprocess",
				"code/task10_training/task10_1a/models/preprocessing_utils.py"
			],
			[
				"task1",
				"task10_main.py"
			],
			[
				"logi",
				"code/task10_training/logistic_regression.py"
			],
			[
				"rul",
				"code/common_ds/rule_utils.py"
			],
			[
				"model6_deps",
				"code/task4_training/task4_4/models/model6_deps.py"
			],
			[
				"model6.py",
				"code/task4_training/task4_4/models/model6.py"
			],
			[
				"conce",
				"code/common_ds/task10_1a/concept.py"
			],
			[
				"rule_",
				"code/common_ds/rule_utils.py"
			],
			[
				"concept",
				"code/common_ds/concept.py"
			],
			[
				"tas",
				"task4_main.py"
			],
			[
				"concept.py",
				"code/common_ds/concept.py"
			],
			[
				"glove",
				"code/glove_utils.py"
			],
			[
				"model0",
				"code/task4_training/task4_3/models/model0.py"
			],
			[
				"main",
				"main.py"
			],
			[
				"validate",
				"code/task4_training/task4_1/validate_22_02_2018.py"
			],
			[
				"rue",
				"code/common_ds/rule_utils.py"
			],
			[
				"exp",
				"code/spacy_experiment/exp1.py"
			],
			[
				"conf",
				"code/config.json"
			],
			[
				"moving",
				"prediction/preparation/moving_average.py"
			],
			[
				"db.py",
				"prediction/db.py"
			],
			[
				"susb",
				"prediction/subset_selection.py"
			],
			[
				"find",
				"find_accuracy.py"
			],
			[
				"e",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"enha",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"db",
				"prediction/db.py"
			],
			[
				"neig",
				"prediction/kline/neighbor_service.py"
			],
			[
				"enhance",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"neigh",
				"prediction/kline/neighbor_service.py"
			],
			[
				"db.",
				"prediction/db.py"
			],
			[
				"en",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"exam",
				"example.py"
			],
			[
				"__init__.p",
				"prediction/preparation/__init__.py"
			],
			[
				"__",
				"prediction/company_network/__init__.py"
			],
			[
				"enhan",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"subset",
				"prediction/subset_selection.py"
			],
			[
				"moving_",
				"prediction/preparation/moving_average.py"
			],
			[
				"enhanc",
				"prediction/preparation/enhanced_spline_reg.py"
			],
			[
				"subs",
				"prediction/subset_selection.py"
			],
			[
				"su",
				"prediction/subset_selection.py"
			],
			[
				"b",
				"prediction/subset_selection.py"
			],
			[
				"spline",
				"prediction/preparation/spline_reg.py"
			],
			[
				"modu",
				"prediction/modules.py"
			],
			[
				"__init",
				"prediction/__init__.py"
			],
			[
				"cro",
				"cross.py"
			],
			[
				"mod",
				"modules.py"
			],
			[
				"par",
				"param.py"
			],
			[
				"question",
				"app/question_package/question_module.py"
			],
			[
				"text",
				"app/question_package/textbot_attribute.py"
			],
			[
				"consul",
				"app/consultation/consultation_handler.py"
			],
			[
				"textb",
				"app/question_package/textbot_questionclassifier8.py"
			],
			[
				"textbot",
				"app/question_package/textbot_questionclassifier8.py"
			],
			[
				"inde",
				"app/static/index.html"
			],
			[
				"contr",
				"app/mod_ask/controllers.py"
			],
			[
				"controllers",
				"app/mod_ask/controllers.py"
			],
			[
				"textbot_quest",
				"app/question_package/textbot_questionclassifier8.py"
			],
			[
				"question_modu",
				"app/question_package/question_module.py"
			],
			[
				"main.js",
				"app/static/js/main.js"
			],
			[
				"index.",
				"app/static/index.html"
			],
			[
				"route",
				"WebContent/js/route.js"
			],
			[
				"controller",
				"public/marble/menu-component/controller.js"
			],
			[
				"rout",
				"public/marble/route.js"
			],
			[
				"app.",
				"app.js"
			],
			[
				"index",
				"index.html"
			],
			[
				"hello",
				"src/components/Hello.vue"
			],
			[
				"login",
				"views/login.html"
			],
			[
				"app",
				"app.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/interviewbot-workspace/interviewbot-backend/interviewbot.sublime-project"
			],
			[
				"inter",
				"~/Documents/interviewbot-workspace/interviewbot-backend/interviewbot.sublime-project"
			],
			[
				"mod",
				"~/Documents/chatbot-workspace/nick-modules/modules2-4/modules2.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 265.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
